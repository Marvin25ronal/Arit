options{
	IGNORE_CASE=true;
	STATIC=false;
}
PARSER_BEGIN(Gramatica)
package AnalizadorD;
public class Gramatica{
	
}
PARSER_END(Gramatica)
/*
██╗░░░░░███████╗██╗░░██╗██╗░█████╗░░█████╗░
██║░░░░░██╔════╝╚██╗██╔╝██║██╔══██╗██╔══██╗
██║░░░░░█████╗░░░╚███╔╝░██║██║░░╚═╝██║░░██║
██║░░░░░██╔══╝░░░██╔██╗░██║██║░░██╗██║░░██║
███████╗███████╗██╔╝╚██╗██║╚█████╔╝╚█████╔╝
╚══════╝╚══════╝╚═╝░░╚═╝╚═╝░╚════╝░░╚════╝░
*/
SKIP :{
	" "
	|"\t"
	|"\r"
	|"\n"
	|<"#" (~["\n", "\r"])*>
	|<"#*" (~["*"])* "*" ("*" | ~["*","#"] (~["*"])* "*")* "#">
}

TOKEN : {
	<INTEGER: (["0"-"9"])+>
	|<NUMERIC:(["0"-"9"])+"."(["0"-"9"])+>
	|<PYCOMA:";">
	|<MAS:"+">
	|<MENOS:"-">
	|<POR:"*">
	|<DIV:"/">
	|<POTENCIA:"^">
	|<MODULO:"%%">
	|<PAR_A:"(">
	|<PAR_C:")">
	|<COR_A:"[">
	|<COR_C:"]">
	|<LLAV_A:"{">
	|<LLAV_C:"}">
	|<IGUAL:"=">
	|<DISTINTO:"!=">
	|<IGUAL_IGUAL:"==">
	|<MAYOR_I:">=">
	|<MENOR_I:"<=">
	|<MAYOR:">">
	|<MENOR:"<">
	|<AND:"&">
	|<OR:"|">
	|<NOT:"!">
	|<TRUE:"true">
	|<FALSE:"false">

}
MORE:{
	"\"" : STRING_STATE
}
<STRING_STATE> MORE:{
	<~["\""]>
}
<STRING_STATE> TOKEN:{
	<STRING:"\""> : DEFAULT
}
/*

░██████╗██╗███╗░░██╗████████╗░█████╗░░█████╗░████████╗██╗░█████╗░░█████╗░
██╔════╝██║████╗░██║╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝██║██╔══██╗██╔══██╗
╚█████╗░██║██╔██╗██║░░░██║░░░███████║██║░░╚═╝░░░██║░░░██║██║░░╚═╝██║░░██║
░╚═══██╗██║██║╚████║░░░██║░░░██╔══██║██║░░██╗░░░██║░░░██║██║░░██╗██║░░██║
██████╔╝██║██║░╚███║░░░██║░░░██║░░██║╚█████╔╝░░░██║░░░██║╚█████╔╝╚█████╔╝
╚═════╝░╚═╝╚═╝░░╚══╝░░░╚═╝░░░╚═╝░░╚═╝░╚════╝░░░░╚═╝░░░╚═╝░╚════╝░░╚════╝░
*/
/**
INICIO->(CUERPO)+EOF
*/
void INICIO():
{

}
{
	(CUERPO)+ <EOF>
}

void CUERPO():
{

}
{
	(NUMERIC)+
}
