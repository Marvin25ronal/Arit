package AnalizadorA;
import java_cup.runtime.Symbol;
import java.util.LinkedList;
import Reportes.Errores;
import Reportes.Errores.TipoError;
import java.util.ArrayList;
import AST.*;
parser code 
{://Codigo visible
    
    public AST ast;
   
    public ArrayList<Errores>listaerrores=new ArrayList<>();
    public void syntax_error(Symbol s){
        Errores nuevo=new Errores(TipoError.SINTACTICO,"Error R de sintaxis "+s.value,s.left+1,s.right+1);
        listaerrores.add(nuevo);
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
       
    }
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        Errores nuevo=new Errores(TipoError.SINTACTICO,"Error NR de sintaxis "+s.value,s.left+1,s.right+1);
        //Errores nuevo=new Errores(s.left+1,s.right+1,"Error NR de sintaxis "+s.value,Errores.Terror.SINTACTICO);
        listaerrores.add(nuevo);
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }
:}
action code
{://Codigo de usuario

:}
terminal String LLAV_A,LLAV_C,COR_A,COR_C,PAR_A,PAR_C;
terminal String OR,NOT,AND,MAYOR,MAYOR_I,MENOR,MENOR_I,DISTINTO,IGUAL_IGUAL,MAS,MENOS,DIV,POR,MODULO,POTENCIA,PREGUNTA,DOSPUNTOS;
terminal String ID,NUMERIC,STRING,INTEGER,TRUE,FALSE,UMENOS;
terminal String IGUAL,PYCOMA,PRINT;

non terminal String INICIO;
non terminal String ASIGNACION,EXP;
non terminal LinkedList<Nodo>CUERPO;
non terminal String CONTROLES,BLOQUE,IMPRIMIR,FUNCIONES;

precedence right IGUAL;
precedence right PREGUNTA,DOSPUNTOS;
precedence left OR;
precedence left AND;
precedence left IGUAL_IGUAL,DISTINTO;
precedence nonassoc MENOR,MENOR_I,MAYOR_I,MAYOR;
precedence left MAS,MENOS;
precedence left POR,DIV,MODULO,POTENCIA;
precedence right NOT;
precedence right UMENOS;
precedence left COR_A, COR_C;
precedence left PAR_A, PAR_C;



//precedence left PAR_A, TYPEVAR, PAR_C;

//precedence right COR_A, COR_C;

//precedence left POTENCIA;

start with INICIO;

INICIO::= CUERPO;

CUERPO::=ASIGNACION
	|CUERPO ASIGNACION
	|CONTROLES
	|CUERPO CONTROLES
	|BLOQUE
	|CUERPO BLOQUE
	|FUNCIONES
	;

ASIGNACION::=ID IGUAL EXP
	|ID IGUAL EXP PYCOMA
	;
/*
█▀▀ ▀▄▀ █▀█ █▀█ █▀▀ █▀ █ █▀█ █▄░█
██▄ █░█ █▀▀ █▀▄ ██▄ ▄█ █ █▄█ █░▀█
*/
EXP::=
	MENOS EXP {: :}%prec UMENOS
	|EXP MAS EXP
	|EXP MENOS EXP
	|EXP POR EXP
	|EXP DIV EXP
	|EXP POTENCIA EXP
	|EXP MODULO EXP
	
	|NOT EXP
	|EXP OR EXP
	|EXP AND EXP
	|EXP MENOR EXP
	|EXP MAYOR EXP
	|EXP MENOR_I EXP
	|EXP MAYOR_I EXP
	|EXP IGUAL_IGUAL EXP
	|EXP DISTINTO EXP
	|EXP PREGUNTA EXP DOSPUNTOS EXP

	|PAR_A EXP PAR_C
	|ID
	|NUMERIC
	|STRING
	|INTEGER
	|TRUE
	|FALSE
	;

/*
░█▀▀▀ ░█─░█ ░█▄─░█ ░█▀▀█ ▀█▀ ░█▀▀▀█ ░█▄─░█ ░█▀▀▀ ░█▀▀▀█ ░█▀▀▀ ░█▀▀▀█ ░█▀▀█ ░█▀▀▀ ░█▀▀█ ▀█▀ ─█▀▀█ ░█─── ░█▀▀▀ ░█▀▀▀█ 
░█▀▀▀ ░█─░█ ░█░█░█ ░█─── ░█─ ░█──░█ ░█░█░█ ░█▀▀▀ ─▀▀▀▄▄ ░█▀▀▀ ─▀▀▀▄▄ ░█▄▄█ ░█▀▀▀ ░█─── ░█─ ░█▄▄█ ░█─── ░█▀▀▀ ─▀▀▀▄▄ 
░█─── ─▀▄▄▀ ░█──▀█ ░█▄▄█ ▄█▄ ░█▄▄▄█ ░█──▀█ ░█▄▄▄ ░█▄▄▄█ ░█▄▄▄ ░█▄▄▄█ ░█─── ░█▄▄▄ ░█▄▄█ ▄█▄ ░█─░█ ░█▄▄█ ░█▄▄▄ ░█▄▄▄█
*/
FUNCIONES::=
	IMPRIMIR
	|IMPRIMIR PYCOMA
	;
IMPRIMIR::=
	PRINT PAR_A EXP PAR_C
	|PRINT PAR_A PAR_C 
	;